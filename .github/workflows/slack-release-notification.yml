name: Slack Release Notification
permissions:
  contents: read

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  notify-slack:
    name: Notify Slack on Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get release info (manual or event)
        id: release
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            gh release view --json tagName,url,body -q '.tagName + "||" + .url + "||" + .body' > out.txt
            IFS='||' read -r TAG URL BODY < out.txt
            echo "tag_name=$TAG" >> $GITHUB_OUTPUT
            echo "url=$URL" >> $GITHUB_OUTPUT
            echo "body<<EOF" >> $GITHUB_OUTPUT
            echo "$BODY" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "tag_name=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
            echo "url=${{ github.event.release.url }}" >> $GITHUB_OUTPUT
            echo "body<<EOF" >> $GITHUB_OUTPUT
            echo "${{ github.event.release.body }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert release notes markdown to Slack mrkdwn
        uses: LoveToKnow/slackify-markdown-action@v1.0.0
        id: markdown
        with:
          text: "${{ steps.release.outputs.body }}"

      - name: Post Release to Slack
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "CHSJYJR8C",
              "icon_emoji": ":rocket:",
              "text": "ðŸš€ Release ${{ steps.release.outputs.tag_name }}. See details on GitHub.",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸš€ Release ${{ steps.release.outputs.tag_name }}"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "<${{ steps.release.outputs.html_url }}|View on GitHub>"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ steps.markdown.outputs.text }}"
                  }
                }
              ]
            }
