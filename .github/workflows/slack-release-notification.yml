name: Slack Release Notification
permissions:
  contents: read

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  notify-slack:
    name: Notify Slack on Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get release info (manual or event)
        id: release
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            gh release view --json tagName,url,body -q '.tagName + "||" + .url + "||" + .body' > out.txt
            IFS='||' read -r TAG URL BODY < out.txt
            echo "tag_name=$TAG" >> $GITHUB_OUTPUT
            echo "url=$URL" >> $GITHUB_OUTPUT
            echo "body<<EOF" >> $GITHUB_OUTPUT
            echo "$BODY" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "tag_name=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
            echo "url=${{ github.event.release.url }}" >> $GITHUB_OUTPUT
            echo "body<<EOF" >> $GITHUB_OUTPUT
            echo "${{ github.event.release.body }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: pnpm add --no-save @slack/web-api slackify-markdown

      - name: Post Release to Slack
        run: |
          node .github/scripts/github-to-slack.js \
            "${{ steps.release.outputs.tag_name }}" \
            "${{ steps.release.outputs.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          RELEASE_BODY: ${{ steps.release.outputs.body }}
