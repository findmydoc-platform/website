name: Feature Branch Integration & Deployment

env:
  NODE_VERSION: 22
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
    paths-ignore:
      - '**/.*'
      - '!**/.github/workflows/**'
      - '**/*.md'
  workflow_dispatch:

jobs:
  check-migrations:
    name: Check for new migrations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Check if migration scripts changed
        id: migration_check
        run: |
          if git diff --quiet origin/main HEAD -- src/migrations/; then
            echo "No migration changes."
            echo "migrations_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Migration changes detected!"
            echo "migrations_changed=true" >> $GITHUB_OUTPUT
          fi

  Lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Lint project
        run: pnpm lint

  Test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Test project
        run: pnpm test

  Build:
    name: Build for Vercel
    runs-on: ubuntu-latest
    needs: [check-migrations, Lint, Test]
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: pnpm install --global vercel@canary

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: List build artifacts
        run: |
          echo "🔍 Vercel output directory structure:"
          find .vercel/output -type f -not -path "*/node_modules/*" | sort
          echo "📊 Directory sizes:"
          du -h -d 2 .vercel/output

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vercel-artifacts
          path: .vercel/output
          retention-days: 7

  Deploy-Preview:
    name: Deploy to preview environment
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install Vercel CLI
        run: pnpm install --global vercel@canary

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: vercel-artifacts
          path: .vercel/output

      - name: List downloaded artifacts
        run: |
          echo "🔍 Vercel output directory structure:"
          find .vercel/output -type f -not -path "*/node_modules/*" | sort
          echo "📊 Directory sizes:"
          du -h -d 2 .vercel/output

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} | tee deploy.log

      - id: seturl
        name: Set preview URL
        run: echo "url=$(tail -1 deploy.log)" >> $GITHUB_OUTPUT

      - name: Output preview URL
        run: |
          echo "Preview deployed to: ${{ steps.seturl.outputs.url }}"
